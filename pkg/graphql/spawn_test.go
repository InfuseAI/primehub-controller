package graphql

import (
	"encoding/json"

	serial "k8s.io/apimachinery/pkg/runtime/serializer/json"
	"os"

	//"fmt"
	corev1 "k8s.io/api/core/v1"
	"testing"
)

func TestSpawn(t *testing.T) {
	jsonResult := `{"data":{"system":{"defaultUserVolumeCapacity":20},"user":{"id":"a4ca7d07-c69f-45e3-b99b-89f8643162b4","username":"phadmin","isAdmin":true,"volumeCapacity":null,"groups":[{"name":"everyone","displayName":"Global","enabledSharedVolume":false,"sharedVolumeCapacity":null,"homeSymlink":null,"launchGroupOnly":null,"quotaCpu":0,"quotaGpu":0,"quotaMemory":null,"userVolumeCapacity":null,"projectQuotaCpu":0,"projectQuotaGpu":0,"projectQuotaMemory":null,"instanceTypes":[{"name":"cpu-test","displayName":"cpu-test","description":"cpu-test","spec":{"description":"cpu-test","displayName":"cpu-test","limits.cpu":1,"limits.memory":"1G","limits.nvidia.com/gpu":0},"global":true},{"name":"cpu-test2","displayName":"cpu-test2","description":"cpu-test2","spec":{"description":"cpu-test2","displayName":"cpu-test2","limits.cpu":1,"limits.memory":"1G","limits.nvidia.com/gpu":0},"global":true}],"images":[],"datasets":[{"name":"test","displayName":"test","description":"test","spec":{"description":"test","displayName":"test","enableUploadServer":"true","type":"pv","url":"","variables":{},"volumeName":"test"},"global":true,"writable":false,"mountRoot":"/datasets","homeSymlink":false,"launchGroupOnly":true}]},{"name":"phusers","displayName":"auto generated by bootstrap","enabledSharedVolume":false,"sharedVolumeCapacity":null,"homeSymlink":null,"launchGroupOnly":null,"quotaCpu":null,"quotaGpu":0,"quotaMemory":null,"userVolumeCapacity":null,"projectQuotaCpu":null,"projectQuotaGpu":0,"projectQuotaMemory":null,"instanceTypes":[{"name":"cpu-only","displayName":"cpu-only","description":"auto generated by bootstrap","spec":{"description":"auto generated by bootstrap","displayName":"cpu-only","limits.cpu":1,"limits.memory":"1G","limits.nvidia.com/gpu":0,"requests.cpu":1,"requests.memory":"1G"},"global":false}],"images":[{"name":"base-notebook","displayName":"base-notebook","description":"auto generated by bootstrap","spec":{"description":"auto generated by bootstrap","displayName":"base-notebook","type":"both","url":"jupyter/base-notebook","urlForGpu":"jupyter/base-notebook"},"global":false}],"datasets":[]}]}}}`

	var result DtoResult
	json.Unmarshal([]byte(jsonResult), &result)

	var pod corev1.Pod

	spawner := Spawner{}
	err := spawner.WithData(result.Data, "phusers", "cpu-only", "base-notebook")
	if err != nil {
		panic(err)
	}
	spawner.BuildPodSpec(&pod.Spec)

	serializer := serial.NewSerializerWithOptions(serial.DefaultMetaFactory, nil, nil, serial.SerializerOptions{})
	serializer.Encode(&pod, os.Stdout)
}
