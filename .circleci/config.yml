version: 2
jobs:
  build:
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.12
    steps:
      - checkout

      - run:
        name: Install kubebuilder
        command: |
          os=$(go env GOOS)
          arch=$(go env GOARCH)

          # download kubebuilder and extract it to tmp
          curl -sL https://go.kubebuilder.io/dl/2.1.0/${os}/${arch} | tar -xz -C /tmp/

          # move to a long-term location and put it on your path
          # (you'll need to set the KUBEBUILDER_ASSETS env var if you put it somewhere else)
          sudo mv /tmp/kubebuilder_2.1.0_${os}_${arch} /usr/local/kubebuilder
          export PATH=$PATH:/usr/local/kubebuilder/bin

      # build the application image
      - run:
          name: Build image
          no_output_timeout: 40m
          command: |
            echo "Looking for Docker deployment options"
            if [ ! -n "${DOCKER_TAG:-}" ]
                then
                    DOCKER_TAG=$(echo "${CIRCLE_SHA1}" | cut -c1-10)
            fi
            # If not set, define CONTAINER_NAME
            if [[ ! -n "${CONTAINER_NAME:-}" ]]
                then
                    CONTAINER_NAME="${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            fi
            echo "Container name set to ${CONTAINER_NAME}:${DOCKER_TAG}"
            make docker-build IMG=${CONTAINER_NAME}:${DOCKER_TAG}
 
      # deploy the image
      - run:
          name: Deploy to Docker Hub
          no_output_timeout: 40m
          command: |
            echo "Looking for Docker deployment options"
            if [ ! -n "${DOCKER_TAG:-}" ]
                then
                    DOCKER_TAG=$(echo "${CIRCLE_SHA1}" | cut -c1-10)
            fi
            # If not set, define CONTAINER_NAME
            if [[ ! -n "${CONTAINER_NAME:-}" ]]
                then
                    CONTAINER_NAME="${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            fi
            echo "Container name set to ${CONTAINER_NAME}:${DOCKER_TAG}"
            if [[ -n "$DOCKER_PASS" ]]; then
                  docker login -u $DOCKER_USER -p $DOCKER_PASS
                  docker push ${CONTAINER_NAME}:${DOCKER_TAG}
            fi
