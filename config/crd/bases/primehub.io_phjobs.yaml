
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: phjobs.primehub.io
spec:
  group: primehub.io
  names:
    kind: PhJob
    listKind: PhJobList
    plural: phjobs
    singular: phjob
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PhJob is the Schema for the phjobs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PhJobSpec defines the desired state of PhJob
          properties:
            activeDeadlineSeconds:
              description: Specifies the duration in seconds relative to the startTime
                that the job may be active before the system tries to terminate it;
                value must be positive integer
              format: int64
              type: integer
            backoffLimit:
              description: Specifies the number of retries before marking this job
                failed. Defaults to 6
              format: int32
              type: integer
            command:
              items:
                type: string
              type: array
            group:
              type: string
            image:
              type: string
            instanceType:
              type: string
            jobType:
              enum:
              - Job
              type: string
            ttlSecondsAfterFinished:
              description: ttlSecondsAfterFinished limits the lifetime of a Job that
                has finished execution (either Complete or Failed). If this field
                is set, ttlSecondsAfterFinished after the Job finishes, it is eligible
                to be automatically deleted. When the Job is being deleted, its lifecycle
                guarantees (e.g. finalizers) will be honored. If this field is unset,
                the Job won't be automatically deleted. If this field is set to zero,
                the Job becomes eligible to be deleted immediately after it finishes.
                This field is alpha-level and is only honored by servers that enable
                the TTLAfterFinished feature.
              format: int32
              type: integer
            userId:
              type: string
            userName:
              type: string
          required:
          - command
          - group
          - image
          - instanceType
          - jobType
          - userId
          type: object
        status:
          description: PhJobStatus defines the observed state of PhJob
          properties:
            finishTime:
              format: date-time
              type: string
            phase:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              enum:
              - Pending
              - Ready
              - Running
              - Succeeded
              - Failed
              - Unknown
              type: string
            startTime:
              format: date-time
              type: string
          required:
          - phase
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
